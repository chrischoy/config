" Mapping
"
" Easy navigation
set wrap
" nmap <silent> <C-J> :TmuxNavigateDown<cr>
" vmap <silent> <C-J> :TmuxNavigateDown<cr>
" imap <silent> <C-J> :TmuxNavigateDown<cr>
" nnoremap <silent> <C-J> :TmuxNavigateDown<cr>
" imap <c-j> :TmuxNavigateDown<cr>
" imap <c-k> :TmuxNavigateUp<cr>

au BufNewFile,BufRead *.cu set filetype=cuda
au BufNewFile,BufRead *.cuh set filetype=cuda

""""""""""""""""""""""""""""""""""""
" Cursor line highlight
" hi CursorLine   cterm=NONE ctermbg=lightgray ctermfg=white guibg=lightgray guifg=white
" hi CursorColumn cterm=NONE ctermbg=gray ctermfg=white guibg=gray guifg=white
" hi CursorLine   cterm=NONE ctermbg=red guibg=red
" hi CursorColumn cterm=NONE ctermbg=darkgray guibg=darkgray
" hlight current line current window only
augroup CursorLine
    au!
    au VimEnter,WinEnter,BufWinEnter,TabEnter,FocusGained,CmdwinEnter * setlocal cursorline
    au WinLeave,TabLeave,FocusLost,CmdwinLeave * setlocal nocursorline
augroup END
""""""""""""""""""""""""""""""""""""
" hi CursorLine   cterm=NONE ctermbg=red ctermfg=white guibg=gray guifg=white

set mouse+=a
if &term =~ '^screen'
    " tmux knows the extended mouse mode
    set ttymouse=xterm2
endif


nnoremap <F5> "=strftime("%Y-%m-%dT%H:%M:%S%z")<CR>p
inoremap <F5> <C-R>=strftime("%Y-%m-%dT%H:%M:%S%z")<CR>

" colorscheme rootwater
" colorscheme Tomorrow-Night
" colorscheme bubblegum
" colorscheme burnttoast256
" colo hybrid
" colorscheme dark-ruby
colorscheme solarized
let g:airline_theme='dark'

" Line Number
" hi LineNr ctermbg=44 guibg=44

" Vertical split
" hi VertSplit ctermbg=white guibg=white

"Pmenu
" hi Pmenu  guibg=blue ctermbg=blue guifg=white ctermfg=white
" hi PmenuSel   guifg=white         guibg=black
" hi PmenuSel   ctermfg=white       ctermbg=black
" hi PmenuSbar                      guibg=gray
" hi PmenuSbar                      ctermbg=gray

" hi Visual guibg=yellow ctermbg=yellow
" hi VertSplit ctermfg=white ctermbg=darkblue term=NONE

" http://vim.wikia.com/wiki/Insert_current_date_or_time
nnoremap <F5> "=strftime("%Y-%m-%dT%H:%M:%S%z")<CR>p
inoremap <F5> <C-R>=strftime("%Y-%m-%dT%H:%M:%S%z")<CR>


" Tagbar Toggle
nmap <F8> :TagbarToggle<CR>

" set tabstop=2 shiftwidth=2 expandtab
autocmd FileType * set softtabstop=2 tabstop=2 shiftwidth=2 expandtab
autocmd FileType python set softtabstop=4 tabstop=4 shiftwidth=4 expandtab
autocmd FileType cpp set softtabstop=2 tabstop=2 shiftwidth=2 expandtab

" Set a colorcolumn
if exists('+colorcolumn')
  set colorcolumn=80
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif
